{"version":3,"sources":["architectsolid.svg","config/firebase.js","components/AppHeader.js","pages/result.js","pages/result1.js","pages/search.js","App.js","serviceWorker.js","index.js","components/images/Icon-SVG.svg"],"names":["module","exports","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","useStyles","makeStyles","theme","root","position","bottom","spacing","right","menuButton","marginRight","logo","flexDirection","alignItems","ScrollTop","props","children","window","classes","trigger","useScrollTrigger","target","undefined","disableHysteresis","threshold","Zoom","in","onClick","event","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","className","AppHeader","Fragment","CssBaseline","AppBar","color","Toolbar","IconButton","edge","aria-label","Container","src","alt","width","height","style","margin","id","Fab","size","table","minWidth","LandResultTable","useState","data","setData","alreadyQuery","setAlreadyQuery","useEffect","a","ref","once","then","snapshot","val","result","fetchData","console","log","React","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","newPage","handleChangeRowsPerPage","value","to","Button","variant","href","download","Paper","elevation","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","slice","map","key","name","title","catagory","category","price","link","source","pubDate","TablePagination","rowsPerPageOptions","component","count","length","onChangePage","onChangeRowsPerPage","HomePageHeader","Typography","padding","Stock","rows","headCells","numeric","disablePadding","label","descendingComparator","b","orderBy","EnhancedTableHead","order","onSelectAllClick","onRequestSort","numSelected","rowCount","headCell","align","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","useToolbarStyles","paddingLeft","paddingRight","highlight","palette","type","secondary","main","backgroundColor","lighten","light","text","primary","dark","flex","EnhancedTableToolbar","paper","marginBottom","border","clip","overflow","top","searchContainer","search","borderRadius","shape","fade","common","black","breakpoints","up","marginLeft","searchIcon","pointerEvents","display","justifyContent","inputRoot","inputInput","transition","transitions","create","EnhancedTable","setOrder","setOrderBy","selected","setSelected","dense","setDense","emptyRows","Math","min","InputBase","placeholder","input","inputProps","onChange","e","results","filter","x","searchFunction","aria-labelledby","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","row","labelId","hover","selectedIndex","indexOf","newSelected","concat","handleClick","tabIndex","scope","colSpan","parseInt","FormControlLabel","control","Switch","checked","Search","withStyles","down","path","Result","Home","Result1","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a7574e2e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/architectsolid.33982a0c.svg\";","import * as firebase from \"firebase/app\";\nimport \"firebase/database\";\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDlsOJK_IyiZEhP3vAIfR0VQK3N4she84U\",\n    authDomain: \"socialeye-seniorproject.firebaseapp.com\",\n    databaseURL: \"https://socialeye-seniorproject.firebaseio.com\",\n    projectId: \"socialeye-seniorproject\",\n    storageBucket: \"socialeye-seniorproject.appspot.com\",\n    messagingSenderId: \"209273349716\",\n    appId: \"1:209273349716:web:06abba1d7cb9e2a67f6fc1\",\n    measurementId: \"G-T04J1XK538\"\n  };\n  \n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  const database = firebase.database();\n  \n  export { database }","import React from \"react\";\nimport { AppBar, Toolbar, Typography, IconButton } from \"@material-ui/core\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Fab from \"@material-ui/core/Fab\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport MenuIcon from '@material-ui/icons/Menu';\n// import SearchIcon from '@material-ui/icons/Search';\nimport logo from \"./images/Icon-SVG.svg\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  menuButton: {\n    position: 'absolute',\n    marginRight: theme.spacing(2),\n  },\n  logo: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  }\n}));\n\nfunction ScrollTop(props) {\n  const { children, window } = props;\n  const classes = useStyles();\n  const trigger = useScrollTrigger({\n    target: window ? window() : undefined,\n    disableHysteresis: true,\n    threshold: 100,\n  });\n\n  const handleClick = (event) => {\n    const anchor = (event.target.ownerDocument || document).querySelector(\n      \"#back-to-top-anchor\"\n    );\n\n    if (anchor) {\n      anchor.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n    }\n  };\n\n  return (\n    <Zoom in={trigger}>\n      <div onClick={handleClick} role=\"presentation\" className={classes.root}>\n        {children}\n      </div>\n    </Zoom>\n  );\n}\n\nconst AppHeader = (props) => {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"fixed\" color=\"primary\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Container className={classes.logo}>\n          <img\n            src={logo}\n            alt=\"logo\"\n            width=\"50\"\n            height=\"50\"\n            style={{ margin: 10 }}\n          />\n          {/* <Typography variant=\"h6\" color=\"inherit\">\n            Social Eye\n          </Typography> */}\n          </Container>\n        </Toolbar>\n      </AppBar>\n      <Toolbar id=\"back-to-top-anchor\" />\n      <Container>{props.children}</Container>\n      <ScrollTop {...props}>\n        <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\n          <KeyboardArrowUpIcon />\n        </Fab>\n      </ScrollTop>\n    </React.Fragment>\n  );\n};\n\nexport default AppHeader;\n","import React, { useEffect, useState } from \"react\";\nimport _ from \"lodash\";\n\nimport \"../App.css\";\nimport { database } from \"../config/firebase\";\n\nimport {\n  Button,\n  TextField,\n  makeStyles,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TablePagination,\n  Paper,\n  Text,\n} from \"@material-ui/core\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams,\n} from \"react-router-dom\";\nimport \"fontsource-roboto\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 300,\n  },\n});\n\nexport const LandResultTable = () => {\n  const [data, setData] = useState();\n  const [alreadyQuery, setAlreadyQuery] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await database\n        .ref(\"/result\")\n        .once(\"value\")\n        .then(function (snapshot) {\n          return snapshot.val();\n        });\n      setData(result);\n      setAlreadyQuery(true);\n    };\n    if (!alreadyQuery) {\n      fetchData();\n    }\n    if (data) {\n      console.log(\"Mockup \", data);\n    }\n  });\n  // console.log(mockxxx)\n\n  console.log(\"Data \", data);\n\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const renderData = () => {\n    if (data)\n      return (\n        <Paper elevation={3}>\n          <TableContainer>\n            <Table\n              stickyHeader\n              className={classes.table}\n              aria-label=\"simple table\"\n              size=\"small\"\n            >\n              <TableHead>\n                <TableRow>\n                  <TableCell style={{ width: 800 }}>Name</TableCell>\n                  <TableCell>Price</TableCell>\n                  <TableCell>Link</TableCell>\n                  <TableCell>Link</TableCell>\n                  <TableCell>Link</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {data\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((data, key) => {\n                    return (\n                      <Stock\n                        key={key}\n                        name={data.title}\n                        catagory={data.category}\n                        price={data.price}\n                        size={data.size}\n                        link={data.link}\n                        source={data.source}\n                        pubDate={data.pubDate}\n                      />\n                    );\n                  })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 100]}\n            component=\"div\"\n            count={data.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n      );\n    return <h1>กูโหลดอยู่ไอ่สัส!!!</h1>;\n  };\n  // const stringJSON = JSON.stringify(database)\n  // console.log(\"database \", database)\n  return (\n    <>\n      <HomePageHeader />\n      <Link to=\"/\">\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          href=\"#outlined-buttons\"\n          style={{ margin: 10 }}\n        >\n          Home\n        </Button>\n      </Link>\n      <Link to={\"/mockupjson.js\"} target=\"_blank\" download>\n        <Button variant=\"contained\" color=\"primary\">\n          Download JSON\n        </Button>\n      </Link>\n      {renderData()}\n    </>\n  );\n};\n\nconst HomePageHeader = () => {\n  return (\n    <header className=\"header\">\n      <Typography variant=\"h4\" className=\"header\" style={{ padding: 10 }}>\n        Result for \"Saimai\"\n      </Typography>\n    </header>\n  );\n};\n\nconst Stock = ({ name, catagory, price, size, link, source, pubDate }) => {\n  // if (!name) return null;\n  return (\n    <TableRow>\n      <TableCell>{name}</TableCell>\n      <TableCell>{catagory}</TableCell>\n      <TableCell>{price}</TableCell>\n      <TableCell>{source}</TableCell>\n      <TableCell>{pubDate}</TableCell>\n      <TableCell>\n        <a href={link}>Link</a>\n      </TableCell>\n    </TableRow>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles, fade } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport InputBase from '@material-ui/core/InputBase';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\n\n\n\nimport { database } from \"../config/firebase\";\nimport data from \"../result.json\"\nimport { Block } from '@material-ui/icons';\n\nconst rows = data.result\nconst headCells = [\n  { id: 'title', numeric: false, disablePadding: false, label: 'Title' },\n  { id: 'category', numeric: false, disablePadding: false, label: 'Category' },\n  { id: 'pubDate', numeric: false, disablePadding: false, label: 'Publishing Date' },\n  { id: 'price', numeric: true, disablePadding: false, label: 'Price (฿)' },\n  { id: 'size', numeric: true, disablePadding: false, label: 'Size' },\n  { id: 'link', numeric: false, disablePadding: false, label: 'Link' },\n  { id: 'source', numeric: false, disablePadding: false, label: 'Source' },\n];\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell> */}\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding='default'\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar>\n      <Typography\n        className={classes.title}\n        variant=\"h6\"\n        id=\"tableTitle\"\n        component=\"div\"\n      >\n        Property Listings\n      </Typography>\n      {/* <Tooltip title=\"Filter list\">\n        <IconButton aria-label=\"filter list\">\n          <FilterListIcon />\n        </IconButton>\n      </Tooltip> */}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n  searchContainer: {\n    // display: \"block\",\n    // alignContent: \"center\",\n    paddingLeft: \"10px\",\n    paddingRight: \"10px\",\n    // width: \"50%\"\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.black, 0.1),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.black, 0.25),\n    },\n    width: \"50%\",\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"12ch\",\n      \"&:focus\": {\n        width: \"20ch\",\n      },\n    },\n  },\n}));\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  // const [rows, setRows] = useState();\n  const [alreadyQuery, setAlreadyQuery] = useState(false);\n\n  // useEffect(() => {\n  //   const fetchData = async () => {\n  //     const result = await database\n  //       .ref(\"/result\")\n  //       .once(\"value\")\n  //       .then(function (snapshot) {\n  //         return snapshot.val();\n  //       });\n  //     setRows(result);\n  //     setAlreadyQuery(true);\n  //   };\n  //   if (!alreadyQuery) {\n  //     fetchData();\n  //   }\n  //   if (rows) {\n  //     console.log(\"Mockup \", rows);\n  //   }\n  // });\n\n  // console.log(\"Data \", rows);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  // const handleSelectAllClick = (event) => {\n  //   if (event.target.checked) {\n  //     const newSelecteds = rows.map((n) => n.name);\n  //     setSelected(newSelecteds);\n  //     return;\n  //   }\n  //   setSelected([]);\n  // };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  // const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  const searchFunction = (value) => {\n    const results = rows.filter(\n      (x) => x.title.search(value) !== -1\n      // x.category.search(value) !== -1 ||\n      // x.pubDate.search(value) !== -1 ||\n      // x.price.search(value) !== -1 ||\n      // x.size.search(value) !== -1 ||\n      // x.link.search(value) !== -1 ||\n      // x.source.search(value) !== -1\n    );\n    console.log(value)\n    console.log(\"Results: \", results)\n    // return results;\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <div className={classes.searchContainer}>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ \"aria-label\": \"search\" }}\n              onChange={e => searchFunction({ value: e.target.value })}\n            />\n          </div>\n        </div>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? \"small\" : \"medium\"}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              // onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  // const isItemSelected = isSelected(row.name);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      // aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      // selected={isItemSelected}\n                    >\n                      {/* <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ \"aria-labelledby\": labelId }}\n                        />\n                      </TableCell> */}\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"default\"\n                      >\n                        {row.title}\n                      </TableCell>\n                      <TableCell>{row.category}</TableCell>\n                      <TableCell>{row.pubDate}</TableCell>\n                      <TableCell>{row.price}</TableCell>\n                      <TableCell>{row.size}</TableCell>\n                      <TableCell>\n                        <a href={row.link}>Link</a>\n                      </TableCell>\n                      <TableCell>{row.source}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[50, 100, 200]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport logo from \"../architectsolid.svg\";\nimport {\n  Button,\n  TextField,\n  makeStyles,\n  Typography,\n  Container,\n} from \"@material-ui/core\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams,\n} from \"react-router-dom\";\nimport EnhancedTable from \"./result1\";\nimport \"../App.css\";\nimport AppHeader from \"../components/AppHeader\"\n\nexport const Search = () => {\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\">\n        <img src={logo} alt=\"logo\" />\n        <Typography variant=\"h3\" className=\"header\">The social eye</Typography>\n        <form noValidate autoComplete=\"off\">\n          <TextField id=\"standard-basic\" label=\"Search\" />\n        </form>\n        <br />\n        <Link to=\"/result\">\n          <Button variant=\"contained\" color=\"primary\">Go</Button>\n        </Link>\n      </header> */}\n      <AppHeader>\n        <EnhancedTable />\n      </AppHeader>\n    </div>\n  );\n};\n","import React, { Fragment } from \"react\";\nimport { CssBaseline, withStyles } from \"@material-ui/core\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"./config/firebase\";\nimport AppHeader from \"./components/AppHeader\";\nimport { LandResultTable } from \"./pages/result\";\nimport \"./App.css\";\nimport \"./pages/search.js\";\nimport { Search } from \"./pages/search.js\";\n\nconst styles = (theme) => ({\n  main: {\n    padding: theme.spacing(3),\n    [theme.breakpoints.down(\"xs\")]: {\n      padding: theme.spacing(2),\n    },\n  },\n});\n\nconst App = ({ classes }) => (\n  <Fragment>\n    <CssBaseline />\n    <AppHeader />\n    <main className={classes.main}>\n      <Router>\n        <div>\n          <Switch>\n            <Route path=\"/result\">\n              <Result />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/result1\">\n              <Result1 />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </main>\n  </Fragment>\n);\n\nexport default withStyles(styles)(App);\n\nfunction Home() {\n  return (\n    <div className=\"App\">\n      <Search />\n    </div>\n  );\n}\n\nfunction Result() {\n  return (\n    <div className=\"App\">\n      <LandResultTable />\n    </div>\n  );\n}\n\nfunction Result1() {\n  return (\n    <div className=\"App\">\n      <Result1 />\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Icon-SVG.ab513073.svg\";"],"sourceRoot":""}